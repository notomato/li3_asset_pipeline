<?php

namespace li3_asset_pipeline\tests\cases\extensions\template;

use Assetic\Filter\LessphpFilter;
use Assetic\Filter\CoffeeScriptFilter;
use li3_asset_pipeline\extensions\template\Asset;
use li3_asset_pipeline\extensions\template\asset\Locator;
use li3_asset_pipeline\extensions\template\asset\Pipeline;
use lithium\core\Libraries;

class AssetTest extends \lithium\test\Unit {
	public function setUp() {
		Pipeline::config(array(
			'default' => array(
				'test' => array(
					'paths' => array(
						'/fixtures/assets1',
						'/fixtures/assets2',
						'/fixtures/assets3'
					),
					'processors' => array(
						'php' => new \lithium\template\View(),
						'less' => new LessphpFilter(),
						'coffee' => new CoffeeScriptFilter('/usr/local/bin/coffee', '/usr/local/bin/node')
					)
				)
			)
		));
	}
	
	public function testGetPaths() {
		$config = Libraries::get('li3_asset_pipeline');
		$paths = Asset::getPaths();
		$this->assertTrue(in_array($config['path'].'/fixtures/assets1',$paths));
		$this->assertTrue(in_array($config['path'].'/fixtures/assets2',$paths));
		$this->assertTrue(in_array($config['path'].'/fixtures/assets3',$paths));
	}
	
	public function testGetProcessors() {
		$result = array_keys(Asset::getProcessors('asset.css.less.php'));
		$expected = array('php','less');
		$this->assertEqual($expected, $result);
		
		$result = array_keys(Asset::getProcessors('asset.js.coffee.php'));
		$expected = array('php','coffee');
		$this->assertEqual($expected, $result);
	}
	
	public function testGetPipelineAssets() {
		$assets = Asset::getPipelineAssets('sub/application','js');
		$result = $assets->dump();
		$expected = '// Generated by CoffeeScript 1.3.3
(function() {



}).call(this);

// just a JS

// some simple comment
/* some
 * multiline
 * stuff
 */

var some_code;

#= require sub/asset_one
//
//
#= require asset_three
';
		$this->assertEqual($expected, $result);
	}
}